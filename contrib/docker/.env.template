# Variables in this file will be substituted into docker-compose.yml
# Save a copy of this file as .env and insert your own values.
# Verify correct substitution with "docker-compose config"

#To populate from a new ckan install run the following commands
# value=$(sudo grep 'beaker.session.secret'  $VOL_CKAN_HOME/ckan.ini | awk {'print $3'}); sed -i "s/# CKAN___BEAKER__SESSION__SECRET=CHANGE_ME/CKAN___BEAKER__SESSION__SECRET=$value/pe" .env
# value=$(sudo grep 'app_instance_uuid'  $VOL_CKAN_HOME/ckan.ini | awk {'print $3'}); sed -i "s/# CKAN___APP_INSTANCE_UUID=CHANGE_ME/CKAN___APP_INSTANCE_UUID=$value/pe" .env
# value=$(sudo grep 'api_token.jwt.encode.secret'  $VOL_CKAN_HOME/ckan.ini | awk {'print $3'}); sed -i "s/# CKAN___API_TOKEN__JWT__ENCODE__SECRET=string:CHANGE_ME/CKAN___API_TOKEN__JWT__ENCODE__SECRET=$value/pe" .env
# value=$(sudo grep 'api_token.jwt.decode.secret'  $VOL_CKAN_HOME/ckan.ini | awk {'print $3'}); sed -i "s/# CKAN___API_TOKEN__JWT__DECODE__SECRET=string:CHANGE_ME/CKAN___API_TOKEN__JWT__DECODE__SECRET=$value/pe" .env


# docker compose file to use. Defaults to docker-compose.yml for docker hub image builds
# set to docker-compose.local.yml to build local images from source
COMPOSE_FILE=docker-compose.yml
#COMPOSE_FILE=docker-compose.cpu_limited.yml
#COMPOSE_FILE=docker-compose.local.yml

#############################
# Build Kit
#############################
COMPOSE_DOCKER_CLI_BUILD=1
DOCKER_BUILDKIT=1
# DOCKER_DEFAULT_PLATFORM=linux/amd64

#############################
# Debuging
# these don't seem to work
# set in ckan.ini
#############################
# CKAN___DEBUG=false
# CKAN___DEBUG_TB_PROFILER_ENABLED=false

#############################
# Image: CKAN
#############################

# default ckan image tag to pull
CKAN_TAG=latest

# External Logging
# Set the folder path of the CKAN access log that will be read by Fail2ban jail.
CKAN_LOG_PATH=/var/log/ckan

# Basic
CKAN_SITE_ID=default
CKAN_SITE_URL=http://localhost:5000
CKAN_PORT=5000

# `paster make-config` generates a unique value for these each time it generates
# a config file.
# CKAN___BEAKER__SESSION__SECRET=CHANGE_ME
# CKAN___APP_INSTANCE_UUID=CHANGE_ME
# See https://docs.ckan.org/en/latest/maintaining/configuration.html#api-token-settings
# CKAN___API_TOKEN__JWT__ENCODE__SECRET=string:CHANGE_ME
# CKAN___API_TOKEN__JWT__DECODE__SECRET=string:CHANGE_ME


CKAN_SYSADMIN_NAME=admin
CKAN_SYSADMIN_PASSWORD=test1234
CKAN_SYSADMIN_EMAIL=your_email@example.com
TZ=UTC
# TZ=Canada/Vancouver

# Solr configuration
CKAN_VERSION=2.9.11
CKAN_CORE_NAME=ckan
CKAN_SOLR_URL=http://solr:8983/solr/ckan
# Database connections
# see docker-compose.yml

# Other services connections
# see docker-compose.yml for more connections
CKAN_REDIS_URL = redis://redis:6379/1
CKAN_DATAPUSHER_URL = http://datapusher:8800

#
# Core settings
CKAN__CACHE_EXPIRES = 604800
CKAN__CACHE_ENABLED = True
CKAN__TRACKING_ENABLED = false

CKAN_SMTP_SERVER=smtp.corporateict.domain:25
CKAN_SMTP_STARTTLS=True
CKAN_SMTP_USER=user
CKAN_SMTP_PASSWORD=pass
CKAN_SMTP_MAIL_FROM=ckan@localhost



# limit file size during upload to ckan. not used in most cases but we get a warning if it's not set.
CKAN_MAX_UPLOAD_SIZE_MB=100

CKAN__LOCALE_DEFAULT = en
CKAN__LOCALE_ORDER = en fr
CKAN__LOCALES_OFFERED = en fr

#CKAN__TEMPLATE_HEAD_END = <!-- Global site tag (gtag__js) - Google Analytics --><script async src="https://www__googletagmanager__com/gtag/js?id=G-JHDW5F1QN1"></script><script>window__dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-JHDW5F1QN1');</script>


#############################
# Image: DB
#############################
POSTGRES_PASSWORD=ckan
POSTGRES_PORT=5432
# The datastore database will be created in the db container as docs
# Readwrite user/pass will be ckan:POSTGRES_PASSWORD
# Readonly user/pass will be datastore_ro:DATASTORE_READONLY_PASSWORD
DATASTORE_READONLY_PASSWORD=datastore


#############################
# Extension
#############################
CKAN__PLUGINS = "envvars
                stats
                text_view
                image_view
                recline_view
                datastore
                datapusher
                scheming_datasets
                scheming_organizations
                scheming_groups
                scheming_nerf_index
                fluent
                harvest
                ckan_harvester
                csw_harvester
                waf_harvester
                doc_harvester
                ckan_schema_harvester
                spatial_metadata
                spatial_query
                spatial_harvest_metadata_api
                cioos_harvest
                cioos_theme
                ckan_cioos_harvester
                dcat
                structured_data
                resource_proxy
                geo_view
                geojson_view
                wmts_view
                ckan_spatial_harvester
                datastream_harvester"
#	      polar_harvester
#	      glos_harvester
#	      cioos_rdf_harvester
#       dcat_rdf_harvester
#       geonetwork_harvester

#
# Harvest
CKAN__HARVEST__MQ__TYPE=redis
CKAN__HARVEST__MQ__HOSTNAME=redis
CKAN__HARVEST__MQ__PORT=6379
CKAN__HARVEST__MQ__REDIS_DB=1

#
# DCat
CKANEXT__DCAT__RDF__PROFILES = schemaorg cioos_dcat
CKANEXT__DCAT__TRANSLATE_KEYS = False

#
# GeoView
CKANEXT__GEOVIEW__OL_VIEWER__FORMATS = wms kml wfs geojson gml kml arcgis_rest
CKANEXT__GEOVIEW__OL_VIEWER__HIDE_OVERLAYS =  false
CKANEXT__GEOVIEW__OL_VIEWER__DEFAULT_FEATURE_HOVERON =  true
CKANEXT__GEOVIEW__OL_VIEWER__FORWARD_OGC_REQUEST_PARAMS =  true

#
# Scheming
CKAN___SCHEMING__DATASET_SCHEMAS = ckanext.scheming:cioos_siooc_schema.json
CKAN___SCHEMING__PRESETS = ckanext.scheming:presets.json ckanext.fluent:presets.json
CKAN___SCHEMING__DATASET_FALLBACK = true
CKAN___SCHEMING__ORGANIZATION_SCHEMAS = ckanext.scheming:organization.json
CKAN___SCHEMING__GROUP_SCHEMAS = ckanext.scheming:group.json

#
# Spatial
CKAN__SPATIAL__SPATIAL_WIDGET_EXPANDS = false
CKANEXT__SPATIAL__SEARCH_BACKEND = solr
CKANEXT__SPATIAL__DEFAULT_EXTENT = [[46.0, -140.0], [60.0, -125.0]]
CKANEXT__SPATIAL__COMMON_MAP__STADIA__API_KEY = CHANGE_ME
CKAN__CIOOS__RA_JSON_FILE = /base/layers/CHANGE_ME_RA.json
CKAN__SEARCH__SOLR_ALLOWED_QUERY_PARSERS = frange

#
# CIOOS
CKAN__CIOOS__RA_CSS_PATH = /CHANGE_ME.css
# CKAN__RESPONSIBLE_ORGANIZATION_ROLES = ["owner", "originator", "author", "principalInvestigator"]

# to use amazone translate you must have the following AWS keys set
# user found at https://us-east-1.console.aws.amazon.com/iam/home?region=us-east-1#/users/details/cioos-metadata-form-translate-only?section=permissions
AWS_DEFAULT_REGION=us-east-1
AWS_ACCESS_KEY_ID=[CHANGE_ME]
AWS_SECRET_ACCESS_KEY=(CHANGE_ME)

#############################
# Runtime editable Admin Config Settings
#############################
CKAN__EOV_ICON_BASE_PATH = /base/images/eov-icons-svg/pacific/pac_
#CKAN__EXCLUDE_EOV = ['other']
#CKAN__EXCLUDE_EOV_CATEGORY = ['Other']
CKAN__footer_file_name = ''
CKAN__show_language_picker_in_top_bar = False
CKAN__SHOW_SOCIAL_IN_DATASET_SIDEBAR = False
CKAN__HIDE_ORGANIZATION_IN_BREADCRUMB = True
CKAN__HIDE_ORGANIZATION_IN_DATASET_SIDEBAR = True
CKAN__SHOW_RESPONSIBLE_ORGANIZATION_IN_DATASET_SIDEBAR = True
CKAN__SITE_ABOUT = '{"en": "", "fr": ""}'
CKAN__SITE_DESCRIPTION = '{"en": "", "fr": ""}'
CKAN__SITE_HEADING = '{"en": "", "fr": ""}'
CKAN__SITE_INTRO_TEXT = '{"en": "", "fr": ""}'
CKAN__SITE_LOGO_TRANSLATED = '{"en": "", "fr": ""}'
CKAN__THEME = css/main
CKAN__HEADER_FILE_NAME = /menu/pacific_menu_list.html
CKAN__SHOW_LANGUAGE_PICKER_IN_MENU = True
CKAN__SITE_TITLE = '{"en": "CIOOS Pacific", "fr": "SIOOC Pacifique"}'
CKAN__SITE_HOME_URL = http://localdev1.local/
CKAN__HOMEPAGE_STYLE = 4

#############################
# Docker Container resource limits
#############################
LIMIT_CPU_CKAN = 0.5
LIMIT_CPU_CKAN_GATHER_HARVESTER = 0.25
LIMIT_CPU_CKAN_FETCH_HARVESTER = 0.5
LIMIT_CPU_CKAN_RUN_HARVESTER = 0.25
LIMIT_CPU_DATAPUSHER = 0.25
LIMIT_CPU_DB = 0.5
LIMIT_CPU_SOLR = 1.0
LIMIT_CPU_REDIS = 0.25
