# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3.4"

x-common-ckan-variables: &common-ckan-variables
  CKAN_SQLALCHEMY_URL: postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
  CKAN_DATASTORE_WRITE_URL: postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
  CKAN_DATASTORE_READ_URL: postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
  CKAN_SOLR_URL: http://solr:8983/solr/ckan
  CKAN_REDIS_URL: redis://redis:6379/1
  CKAN_DATAPUSHER_URL: http://datapusher:8800
  CKAN_SITE_URL: ${CKAN_SITE_URL}
  CKAN_MAX_UPLOAD_SIZE_MB: ${CKAN_MAX_UPLOAD_SIZE_MB}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  DS_RO_PASS: ${DATASTORE_READONLY_PASSWORD}

x-ckan: &ckan_app
  container_name: ckan
  image: cioos/ckan:${CKAN_TAG}
  links:
    - db
    - solr
    - redis
  ports:
    - "0.0.0.0:${CKAN_PORT}:5000"
  environment:
    # Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
    <<: *common-ckan-variables
    #- TZ=Canada/Vancouver
  #restart: always
  volumes:
    - "/etc/localtime:/etc/localtime:ro"
    - ckan_config:/etc/ckan
    - ckan_home:/usr/lib/ckan
    - ckan_storage:/var/lib/ckan
    - ${CKAN_LOG_PATH}:/usr/lib/ckan/venv/src/logs

volumes:
  ckan_config:
  ckan_home:
  ckan_storage:
  pg_data:
  solr_data:
  redis_data:

services:
  ckan:
    build:
      context: ../../
      args:
        - CKAN_SITE_URL=${CKAN_SITE_URL}
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
      - "5678:5678" # used by the debugger during development. NOT for production
    environment:
      <<: *common-ckan-variables
      # REMOTE_DEBUG: 1
    depends_on:
      - db
      - solr
      - redis
    <<: *ckan_app

  ckan_gather_harvester:
    <<: *ckan_app
    container_name: ckan_gather_harvester
    entrypoint: /ckan-harvester-entrypoint.sh
    user: ckan
    command: ckan --config=/srv/app/ckan.ini harvester gather-consumer
    ports: []
    # ports:
    #  - "5678:5678" # used by the debugger during development. NOT for production
    environment:
      <<: *common-ckan-variables
      # REMOTE_DEBUG: 1
    depends_on:
      - ckan

  ckan_fetch_harvester:
    <<: *ckan_app
    container_name: ckan_fetch_harvester
    entrypoint: /ckan-harvester-entrypoint.sh
    user: ckan
    command: ckan --config=/srv/app/ckan.ini harvester fetch-consumer
    ports: []
    depends_on:
      - ckan
      - ckan_gather_harvester

  ckan_run_harvester:
    <<: *ckan_app
    container_name: ckan_run_harvester
    entrypoint: /ckan-run-harvester-entrypoint.sh
    user: root
    command: /bin/bash -c "echo 'ckan_run_harvester started' && cron -f 2>&1 "
    ports: []
    depends_on:
      - ckan
      - ckan_gather_harvester
      - ckan_fetch_harvester

  datapusher:
    container_name: datapusher
    image: clementmouchet/datapusher
    #restart: always
    ports:
      - "8800:8800"

  db:
    container_name: db
    image: docker_db
    ports:
      - "5432:5432"
    build:
      context: ../../
      dockerfile: contrib/docker/postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    #restart: always
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - pg_data:/var/lib/postgresql/data

  solr:
    container_name: solr
    image: cioos/solr:latest
    build:
      context: ../../
      dockerfile: contrib/docker/solr/Dockerfile
    volumes:
      - solr_data:/var/solr
    #restart: always

  redis:
    container_name: redis
    image: redis:latest
    volumes:
      - redis_data:/data
    #restart: always
